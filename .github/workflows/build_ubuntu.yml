on:
  workflow_dispatch:

name: Build ubuntu package and save as artifact

env:
  swift_package_resolve: swift package resolve
  swift_build: swift build -c release  -Xswiftc -g -Xswiftc -static-stdlib -Xcc -march=skylake
  swift_test: swift test
  cache_version: 2

jobs:
  linux:
    runs-on: ubuntu-22.04
    container: swift:5.9.2-jammy
    name: Linux
    steps:
    - name: Cache resolved dependencies
      id: cache-resolved-dependencies
      uses: actions/cache@v3
      with:
        path: |
          .build
          Package.resolved
        key: ${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-${{ env.cache_version }}-spm-deps-${{ hashFiles('Package.swift', 'Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-${{ steps.get-swift-version.outputs.version }}-${{ env.cache_version }}-spm-deps-
    - name: Resolve dependencies
      if: steps.cache-resolved-dependencies.outputs.cache-hit != 'true'
      run: ${{ env.swift_package_resolve }}
    - name: Install NetCDF
      run: apt-get update && apt-get -qq -y install libnetcdf-dev libbz2-dev build-essential curl
    - name: Get eccodes
      run: |
        curl -L https://github.com/patrick-zippenfenig/ecCodes-ubuntu/releases/download/2.33.0/libeccodes0_2.33.0_jammy_amd64.deb -o libeccodes0_2.33.0_jammy_amd64.deb
        apt install -y ./libeccodes0_2.33.0_jammy_amd64.deb
    - name: Build
      run: |
        ${{ env.swift_build }}
        mkdir Resources
        cp .build/release/openmeteo-api openmeteo-api
        cp -r .build/release/*.resources Resources/
    - name: Package
      uses: gravitl/github-action-fpm@master
      with:
        fpm_args: './build'
        # -d swiftlang-slim -d libeccodes0
        fpm_opts: '-s dir -t deb -n openmeteo-api -v 0.0.0 -d libnetcdf19 -d libeccodes0 --deb-systemd-enable --deb-systemd-auto-start --deb-systemd build/openmeteo-sync.service --deb-systemd build/openmeteo-api.service  --deb-systemd build/openmeteo-api2.service  --deb-systemd build/openmeteo-api3.service --deb-systemd build/openmeteo-notify@.service --deb-default build/openmeteo-api.env --before-install build/openmeteo-before-install.sh --before-upgrade build/openmeteo-before-install.sh build/openmeteo-notify.sh=/usr/local/bin/ openmeteo-api=/usr/local/bin/ Public=/var/lib/openmeteo-api Resources=/var/lib/openmeteo-api'
    - name: Rename deb file
      run: mv openmeteo-api_0.0.0_amd64.deb openmeteo-api_0.0.0_jammy_amd64.deb
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: openmeteo-api_0.0.0_jammy_amd64.deb
        path: openmeteo-api_0.0.0_jammy_amd64.deb
        retention-days: 14

// flatc -o Sources/App/Helper/Writer/ --swift format/marine_api.fbs

include "units.fbs";

namespace com.openmeteo;

enum MarineModel: byte {
    best_match = 0,
    gwam,
    ewam,
}

table MarineHourly {
    time: TimeRange (required);
    wave_height: ValuesAndUnit;
    wave_period: ValuesAndUnit;
    wave_direction: ValuesAndUnit;
    wind_wave_height: ValuesAndUnit;
    wind_wave_period: ValuesAndUnit;
    wind_wave_peak_period: ValuesAndUnit;
    wind_wave_direction: ValuesAndUnit;
    swell_wave_height: ValuesAndUnit;
    swell_wave_period: ValuesAndUnit;
    swell_wave_peak_period: ValuesAndUnit;
    swell_wave_direction: ValuesAndUnit;
}

table MarineDaily {
    time: TimeRange (required);
    wave_height_max: ValuesAndUnit;
    wind_wave_height_max: ValuesAndUnit;
    swell_wave_height_max: ValuesAndUnit;
    wave_direction_dominant: ValuesAndUnit;
    wind_wave_direction_dominant: ValuesAndUnit;
    swell_wave_direction_dominant: ValuesAndUnit;
    wave_period_max: ValuesAndUnit;
    wind_wave_period_max: ValuesAndUnit;
    wind_wave_peak_period_max: ValuesAndUnit;
    swell_wave_period_max: ValuesAndUnit;
    swell_wave_peak_period_max: ValuesAndUnit;
}

table MarineApiResponse {
    latitude: float;
    longitude: float;
    elevation: float;
    model: MarineModel;
    generationtime_ms: float;
    utc_offset_seconds: int32;
    timezone: string;
    timezone_abbreviation: string;
    daily: MarineDaily;
    hourly: MarineHourly;
}

root_type MarineApiResponse;
// automatically generated by the FlatBuffers compiler, do not modify
// swiftlint:disable all
// swiftformat:disable all

import FlatBuffers

public enum com_openmeteo_SiUnit: Int8, Enum, Verifiable {
  public typealias T = Int8
  public static var byteSize: Int { return MemoryLayout<Int8>.size }
  public var value: Int8 { return self.rawValue }
  case undefined = 0
  case celsius = 1
  case fahrenheit = 2
  case kelvin = 3
  case kmh = 4
  case mph = 5
  case knots = 6
  case ms = 7
  case msNotUnitConverted = 8
  case millimeter = 9
  case centimeter = 10
  case inch = 11
  case feet = 12
  case meter = 13
  case gpm = 14
  case percent = 15
  case hectoPascal = 16
  case pascal = 17
  case degreeDirection = 18
  case wmoCode = 19
  case wattPerSquareMeter = 20
  case kilogramPerSquareMeter = 21
  case gramPerKilogram = 22
  case perSecond = 23
  case second = 24
  case qubicMeterPerQubicMeter = 25
  case qubicMeterPerSecond = 26
  case kiloPascal = 27
  case megaJoulesPerSquareMeter = 28
  case joulesPerKilogram = 29
  case hours = 30
  case iso8601 = 31
  case unixtime = 32
  case microgramsPerQuibicMeter = 33
  case grainsPerQuibicMeter = 34
  case dimensionless = 35
  case dimensionlessInteger = 36
  case eaqi = 37
  case usaqi = 38
  case gddCelsius = 39
  case fraction = 40

  public static var max: com_openmeteo_SiUnit { return .fraction }
  public static var min: com_openmeteo_SiUnit { return .undefined }
}


public struct com_openmeteo_TimeRange: NativeStruct, Verifiable, FlatbuffersInitializable {

  static func validateVersion() { FlatBuffersVersion_23_5_26() }

  private var _start: Int64
  private var _end: Int64
  private var _interval: Int32
  private let padding0__: UInt32 = 0

  public init(_ bb: ByteBuffer, o: Int32) {
    let _accessor = Struct(bb: bb, position: o)
    _start = _accessor.readBuffer(of: Int64.self, at: 0)
    _end = _accessor.readBuffer(of: Int64.self, at: 8)
    _interval = _accessor.readBuffer(of: Int32.self, at: 16)
  }

  public init(start: Int64, end: Int64, interval: Int32) {
    _start = start
    _end = end
    _interval = interval
  }

  public init() {
    _start = 0
    _end = 0
    _interval = 0
  }

  public var start: Int64 { _start }
  public var end: Int64 { _end }
  public var interval: Int32 { _interval }

  public static func verify<T>(_ verifier: inout Verifier, at position: Int, of type: T.Type) throws where T: Verifiable {
    try verifier.inBuffer(position: position, of: com_openmeteo_TimeRange.self)
  }
}

public struct com_openmeteo_TimeRange_Mutable: FlatBufferObject {

  static func validateVersion() { FlatBuffersVersion_23_5_26() }
  public var __buffer: ByteBuffer! { return _accessor.bb }
  private var _accessor: Struct

  public init(_ bb: ByteBuffer, o: Int32) { _accessor = Struct(bb: bb, position: o) }

  public var start: Int64 { return _accessor.readBuffer(of: Int64.self, at: 0) }
  public var end: Int64 { return _accessor.readBuffer(of: Int64.self, at: 8) }
  public var interval: Int32 { return _accessor.readBuffer(of: Int32.self, at: 16) }
}

